"use strict";var navSteps,mainSteps,prevBtn,nextBtn,firstStepInputs,firstStepWarnings,activeIndex,main=function(){prepareDOMElements(),prepareDOMEvents()},prepareDOMElements=function(){navSteps=document.querySelectorAll("nav .step button"),mainSteps=[document.querySelector("main .step-1"),document.querySelector("main .step-2"),document.querySelector("main .step-3"),document.querySelector("main .step-4")],prevBtn=document.querySelector(".prev-step"),nextBtn=document.querySelector(".next-step"),firstStepInputs=document.querySelectorAll(".step-1 input"),firstStepWarnings=document.querySelectorAll(".step-1 div.warning")},prepareDOMEvents=function(){navSteps.forEach(function(t){return t.addEventListener("click",navStepSelect)}),nextBtn.addEventListener("click",stepNext),prevBtn.addEventListener("click",stepPrev),nextBtn.addEventListener("click",ifEmpty)},test=function(){console.log(firstStepInputs),console.log(firstStepWarnings)},currentStep=function(){for(var t=0;t<navSteps.length;t++)if(navSteps[t].classList.contains("active"))return t},activateStep=function(t){navSteps.forEach(function(t){return t.classList.remove("active")}),navSteps[t].classList.add("active"),mainSteps.forEach(function(t){return t.classList.add("innactive")}),mainSteps[t].classList.remove("innactive"),0!=t?prevBtn.classList.remove("blank"):prevBtn.classList.add("blank"),3==t?(nextBtn.textContent="Confirm",nextBtn.style.backgroundColor="hsl(228, 100%, 84%)"):(nextBtn.textContent="Next step",nextBtn.style.backgroundColor="hsl(213, 96%, 18%)")},stepNext=function(){currentStep()<3&&1==ifEmpty()&&activateStep(currentStep()+1)},stepPrev=function(){0<currentStep()&&activateStep(currentStep()-1)},navStepSelect=function(t){activateStep(t.target.textContent-1)},ifEmpty=function(){for(var t=0,e=0;e<firstStepInputs.length;e++)0!=firstStepInputs[e].value.trim().length?(firstStepWarnings[e].classList.add("innactive"),firstStepInputs[e].classList.remove("warning")):(firstStepWarnings[e].classList.remove("innactive"),firstStepInputs[e].classList.add("warning"),t++);if(0==t)return!0};document.addEventListener("DOMContentLoaded",function(){main(),test(),currentStep()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0ZXAtbmF2LmpzIl0sIm5hbWVzIjpbIm5hdlN0ZXBzIiwibWFpblN0ZXBzIiwicHJldkJ0biIsIm5leHRCdG4iLCJmaXJzdFN0ZXBXYXJuaW5ncyIsIm1haW4iLCJwcmVwYXJlRE9NRWxlbWVudHMiLCJwcmVwYXJlRE9NRXZlbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsImZpcnN0U3RlcElucHV0cyIsImZvckVhY2giLCJzdGVwIiwiYWRkRXZlbnRMaXN0ZW5lciIsIm5hdlN0ZXBTZWxlY3QiLCJ0ZXN0Iiwic3RlcE5leHQiLCJzdGVwUHJldiIsImlmRW1wdHkiLCJjb25zb2xlIiwibG9nIiwiY29udGFpbnMiLCJjdXJyZW50U3RlcCIsImFjdGl2YXRlU3RlcCIsImkiLCJjbGFzc0xpc3QiLCJmb3J3YXJkIiwibmF2U3RlcCIsInJlbW92ZSIsImFkZCIsIm1haW5TdGVwIiwidGV4dENvbnRlbnQiLCJiYWNrZ3JvdW5kQ29sb3IiLCJzdHlsZSIsIndyb25nSW5wdXRzIiwibGVuZ3RoIiwidmFsdWUiLCJ0cmltIl0sIm1hcHBpbmdzIjoiYUFBQSxJQUFJQSxTQUNBQyxVQURBRCxRQUNBQyxRQUNBQyxnQkFDQUMsa0JBRUFDLFlBSUVDLEtBQU8sV0FDWkMsbUJBQWtCLEVBQ2xCQyxpQkFBZ0IsQ0FDakIsRUFHQ1AsbUJBQW9CUSxXQUFwQlIsU0FDU1MsU0FDUkEsaUJBQXVCLGtCQUN2QkEsRUFGRFIsVUFNVVEsQ0FDVk4sU0FBT08sY0FBWUEsY0FBYyxFQUVqQ0MsU0FBQUEsY0FBa0JGLGNBQVNELEVBQzNCSixTQUFBQSxjQUFvQkssY0FBU0QsRUFDN0JDLFNBQUFDLGNBQUEsY0FBQSxHQUxBUixRQVFTVSxTQUFRRixjQUFJLFlBQUEsRUFQckJQLFFBT3lCVSxTQUFLQyxjQUFpQixZQUFTQyxFQUx4REosZ0JBTVFHLFNBQWlCTixpQkFBa0IsZUFBQSxFQUwzQ0osa0JBTVFVLFNBQWlCTixpQkFBa0IscUJBQUEsQ0FMNUMsRUFRQ0QsaUJBQUEsV0FFRFAsU0FBVVksUUFBRyxTQUFBQyxHQUFQRyxPQUFJSCxFQUFTQyxpQkFBQSxRQUFBQyxhQUFBLENBQUEsQ0FBQSxFQU5sQlosUUFPQVcsaUJBQUEsUUFBQUcsUUFBQSxFQU5BZixRQU9BWSxpQkFBQSxRQUFBSSxRQUFBLEVBTEFmLFFBT09XLGlCQUFLVixRQUFrQmUsT0FBQSxDQUMvQixFQUVBSCxLQUFBLFdBSkNJLFFBT0tDLElBQUtWLGVBQVVYLEVBTnBCb0IsUUFPS3BCLElBQUFBLGlCQUFzQnNCLENBTjVCLEVBV0NDLFlBQUEsV0FFRCxJQUFNQyxJQUFBQSxFQUFBQSxFQUFZQyxFQUFHekIsU0FBZndCLE9BQUFBLENBQUFBLEdBQ0x4QixHQUFBQSxTQUFTWSxHQUFPYyxVQUFDSixTQUFPLFFBQUEsRUFBc0MsT0FBQ0csQ0FIaEUsRUFNQ3hCLGFBQW1CeUIsU0FBQUEsR0FIbkIxQixTQUtJMkIsUUFBWSxTQUFBQyxHQUFFLE9BQUFBLEVBQUFGLFVBQUFHLE9BQUEsUUFBQSxDQUFBLENBQUEsRUFKbEI3QixTQUtDRSxHQUFRd0IsVUFBaUJJLElBQUEsUUFBUSxFQUpsQzdCLFVBS09XLFFBQUEsU0FBQW1CLEdBQUEsT0FBQUEsRUFBQUwsVUFBQUksSUFBQSxXQUFBLENBQUEsQ0FBQSxFQUpQN0IsVUFLUTBCLEdBQUNELFVBQWNHLE9BQVEsV0FBQSxFQUdwQixHQUFYRixFQUxDekIsUUFNQUMsVUFBUTZCLE9BQWMsT0FBQSxFQUV2QjlCLFFBQU93QixVQUFBSSxJQUFBLE9BQUEsRUFHUCxHQUFBSCxHQUNBeEIsUUFBQTZCLFlBQUEsVUFFRDdCLFFBQU1jLE1BQVdnQixnQkFBSCx3QkFMWjlCLFFBT0FxQixZQUFhRCxZQUNkcEIsUUFBQStCLE1BQUFELGdCQUFBLHFCQUVELEVBRUVULFNBQWFELFdBQ2RBLFlBQUEsRUFBQSxHQUFBLEdBQUFKLFFBQUEsR0FDQUssYUFBQUQsWUFBQSxFQUFBLENBQUEsQ0FMRCxFQVNDTCxTQUFBLFdBUG9CLEVBQWhCSyxZQUFZLEdBU2pCQyxhQUFBRCxZQUFBLEVBQUEsQ0FBQSxDQUVBLEVBRUNSLGNBQW9CSixTQUFBQSxHQVBwQmEsYUFRS2IsRUFBQUEsT0FBZXFCLFlBQWMsQ0FBQyxDQVBwQyxFQVlHckIsUUFBQUEsV0FORixJQURBLElBQUl3QixFQVFXLEVBQ2RWLEVBQUEsRUFBQUEsRUFBQWQsZ0JBQUF5QixPQUFBWCxDQUFBLEdBQ0QsR0FBQWQsZ0JBQUFjLEdBQUFZLE1BQUFDLEtBQUEsRUFBQUYsUUFDQWhDLGtCQUFtQnFCLEdBQUdDLFVBQUFJLElBQUEsV0FBQSxFQVBwQm5CLGdCQVFVYyxHQUFBQyxVQUFBRyxPQUFBLFNBQUEsSUFFWnpCLGtCQUFBcUIsR0FBQUMsVUFBQUcsT0FBQSxXQUFBLEVBRURwQixnQkFBU0ssR0FBQUEsVUFBaUJnQixJQUFBLFNBQWtCLEVBQzNDekIsQ0FBTSxJQUdOLEdBQUMsR0FBQThCLEVBUkEsTUFBTyxDQUFBLENBRVQsRUFFQTFCLFNBQVNLLGlCQUFpQixtQkFBb0IsV0FDN0NULEtBQUssRUFDTFcsS0FBSyxFQUNMTyxZQUFZLENBQ2IsQ0FBQyIsImZpbGUiOiJzdGVwLW5hdi5taW5pLmpzIiwic291cmNlc0NvbnRlbnQiOlsibGV0IG5hdlN0ZXBzXHJcbmxldCBtYWluU3RlcHNcclxubGV0IHByZXZCdG5cclxubGV0IG5leHRCdG5cclxubGV0IGZpcnN0U3RlcElucHV0c1xyXG5sZXQgZmlyc3RTdGVwV2FybmluZ3NcclxuXHJcbmxldCBhY3RpdmVJbmRleFxyXG5cclxuY29uc3QgbWFpbiA9ICgpID0+IHtcclxuXHRwcmVwYXJlRE9NRWxlbWVudHMoKVxyXG5cdHByZXBhcmVET01FdmVudHMoKVxyXG59XHJcblxyXG5jb25zdCBwcmVwYXJlRE9NRWxlbWVudHMgPSAoKSA9PiB7XHJcblx0bmF2U3RlcHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCduYXYgLnN0ZXAgYnV0dG9uJylcclxuXHRtYWluU3RlcHMgPSBbXHJcblx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtYWluIC5zdGVwLTEnKSxcclxuXHRcdGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ21haW4gLnN0ZXAtMicpLFxyXG5cdFx0ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignbWFpbiAuc3RlcC0zJyksXHJcblx0XHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdtYWluIC5zdGVwLTQnKSxcclxuXHRdXHJcblx0cHJldkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcmV2LXN0ZXAnKVxyXG5cdG5leHRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcubmV4dC1zdGVwJylcclxuXHJcblx0Zmlyc3RTdGVwSW5wdXRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnN0ZXAtMSBpbnB1dCcpXHJcblx0Zmlyc3RTdGVwV2FybmluZ3MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuc3RlcC0xIGRpdi53YXJuaW5nJylcclxufVxyXG5cclxuY29uc3QgcHJlcGFyZURPTUV2ZW50cyA9ICgpID0+IHtcclxuXHRuYXZTdGVwcy5mb3JFYWNoKHN0ZXAgPT4gc3RlcC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIG5hdlN0ZXBTZWxlY3QpKVxyXG5cdG5leHRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBzdGVwTmV4dClcclxuXHRwcmV2QnRuLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc3RlcFByZXYpXHJcblx0Ly8gZmlyc3RTdGVwSW5wdXRzLmZvckVhY2goZlNJID0+IGZTSS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGlmRW1wdHkpKVxyXG5cdG5leHRCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBpZkVtcHR5KVxyXG59XHJcblxyXG5jb25zdCB0ZXN0ID0gKCkgPT4ge1xyXG5cdC8vIGNvbnNvbGUubG9nKG5hdlN0ZXBzKVxyXG5cdC8vIGNvbnNvbGUubG9nKGN1cnJlbnRTdGVwKCkpXHJcblx0Y29uc29sZS5sb2coZmlyc3RTdGVwSW5wdXRzKVxyXG5cdGNvbnNvbGUubG9nKGZpcnN0U3RlcFdhcm5pbmdzKVxyXG59XHJcblxyXG4vL1NURVAgTkFWSUdBVElPTlxyXG5cclxuY29uc3QgY3VycmVudFN0ZXAgPSAoKSA9PiB7XHJcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBuYXZTdGVwcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0aWYgKG5hdlN0ZXBzW2ldLmNsYXNzTGlzdC5jb250YWlucygnYWN0aXZlJykpIHtcclxuXHRcdFx0Ly8gY29uc29sZS5sb2coaSlcclxuXHRcdFx0cmV0dXJuIGlcclxuXHRcdH1cclxuXHR9XHJcbn1cclxuXHJcbmNvbnN0IGFjdGl2YXRlU3RlcCA9IGZvcndhcmQgPT4ge1xyXG5cdG5hdlN0ZXBzLmZvckVhY2gobmF2U3RlcCA9PiBuYXZTdGVwLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZScpKVxyXG5cdG5hdlN0ZXBzW2ZvcndhcmRdLmNsYXNzTGlzdC5hZGQoJ2FjdGl2ZScpXHJcblx0bWFpblN0ZXBzLmZvckVhY2gobWFpblN0ZXAgPT4gbWFpblN0ZXAuY2xhc3NMaXN0LmFkZCgnaW5uYWN0aXZlJykpXHJcblx0bWFpblN0ZXBzW2ZvcndhcmRdLmNsYXNzTGlzdC5yZW1vdmUoJ2lubmFjdGl2ZScpXHJcblxyXG5cdGlmIChmb3J3YXJkICE9IDApIHtcclxuXHRcdHByZXZCdG4uY2xhc3NMaXN0LnJlbW92ZSgnYmxhbmsnKVxyXG5cdH0gZWxzZSB7XHJcblx0XHRwcmV2QnRuLmNsYXNzTGlzdC5hZGQoJ2JsYW5rJylcclxuXHR9XHJcblxyXG5cdGlmIChmb3J3YXJkID09IDMpIHtcclxuXHRcdG5leHRCdG4udGV4dENvbnRlbnQgPSAnQ29uZmlybSdcclxuXHRcdG5leHRCdG4uc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ2hzbCgyMjgsIDEwMCUsIDg0JSknXHJcblx0fSBlbHNlIHtcclxuXHRcdG5leHRCdG4udGV4dENvbnRlbnQgPSAnTmV4dCBzdGVwJ1xyXG5cdFx0bmV4dEJ0bi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnaHNsKDIxMywgOTYlLCAxOCUpJ1xyXG5cdH1cclxufVxyXG5cclxuY29uc3Qgc3RlcE5leHQgPSAoKSA9PiB7XHJcblx0aWYgKGN1cnJlbnRTdGVwKCkgPCAzICYmIGlmRW1wdHkoKSA9PSB0cnVlKSB7XHJcblx0XHRhY3RpdmF0ZVN0ZXAoY3VycmVudFN0ZXAoKSArIDEpXHJcblx0fVxyXG59XHJcbmNvbnN0IHN0ZXBQcmV2ID0gKCkgPT4ge1xyXG5cdGlmIChjdXJyZW50U3RlcCgpID4gMCkge1xyXG5cdFx0YWN0aXZhdGVTdGVwKGN1cnJlbnRTdGVwKCkgLSAxKVxyXG5cdH1cclxufVxyXG5cclxuY29uc3QgbmF2U3RlcFNlbGVjdCA9IGUgPT4ge1xyXG5cdGFjdGl2YXRlU3RlcChlLnRhcmdldC50ZXh0Q29udGVudCAtIDEpXHJcbn1cclxuXHJcbi8vIDEgU1RFUFxyXG5cclxuY29uc3QgaWZFbXB0eSA9ICgpID0+IHtcclxuXHRsZXQgd3JvbmdJbnB1dHMgPSAwXHJcblx0Zm9yIChsZXQgaSA9IDA7IGkgPCBmaXJzdFN0ZXBJbnB1dHMubGVuZ3RoOyBpKyspIHtcclxuXHRcdGlmIChmaXJzdFN0ZXBJbnB1dHNbaV0udmFsdWUudHJpbSgpLmxlbmd0aCAhPSAwKSB7XHJcblx0XHRcdGZpcnN0U3RlcFdhcm5pbmdzW2ldLmNsYXNzTGlzdC5hZGQoJ2lubmFjdGl2ZScpXHJcblx0XHRcdGZpcnN0U3RlcElucHV0c1tpXS5jbGFzc0xpc3QucmVtb3ZlKCd3YXJuaW5nJylcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGZpcnN0U3RlcFdhcm5pbmdzW2ldLmNsYXNzTGlzdC5yZW1vdmUoJ2lubmFjdGl2ZScpXHJcblx0XHRcdGZpcnN0U3RlcElucHV0c1tpXS5jbGFzc0xpc3QuYWRkKCd3YXJuaW5nJylcclxuXHRcdFx0d3JvbmdJbnB1dHMrK1xyXG5cdFx0fVxyXG5cdH1cclxuXHRpZiAod3JvbmdJbnB1dHMgPT0gMCkge1xyXG5cdFx0cmV0dXJuIHRydWVcclxuXHR9XHJcbn1cclxuXHJcbmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ0RPTUNvbnRlbnRMb2FkZWQnLCAoKSA9PiB7XHJcblx0bWFpbigpXHJcblx0dGVzdCgpXHJcblx0Y3VycmVudFN0ZXAoKVxyXG59KVxyXG4iXX0=
